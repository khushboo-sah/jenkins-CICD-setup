pipeline {
  agent {
    docker {
      image 'docker push in30minthing/ultimate-cicd:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL = "http://56.228.82.103:9000"
    GIT_REPO_NAME = "jenkins-CICD-setup"
    GIT_USER_NAME = "khushboo-sah"
    DOCKER_IMAGE = "ultimate-cicd:${BUILD_NUMBER}"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        // or uncomment this if you want to explicitly use git:
        // git branch: 'main', url: 'https://github.com/khushboo-sah/jenkins-CICD-setup.git'
      }
    }

    stage('Build and Test') {
      steps {
        dir('spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('spring-boot-app') {
            sh """
              mvn sonar:sonar \
              -Dsonar.login=${SONAR_AUTH_TOKEN} \
              -Dsonar.host.url=${SONAR_URL}
            """
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        dir('spring-boot-app') {
          script {
            sh "docker build -t ${DOCKER_IMAGE} ."
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "khushboo.sah067@gmail.com"
            git config user.name "khushboo-sah"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
